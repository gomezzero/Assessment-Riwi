// <auto-generated />
using System;
using Assessment_Riwi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_Riwi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241115125158_createOfModelsAndSeeders")]
    partial class createOfModelsAndSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_Riwi.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AppointmentDay")
                        .HasColumnType("date")
                        .HasColumnName("appointment_day");

                    b.Property<TimeOnly>("AppointmentTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("appointment_time");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDay = new DateOnly(2024, 11, 18),
                            AppointmentTime = new TimeOnly(9, 30, 0),
                            DoctorId = 2,
                            PatientId = 1,
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDay = new DateOnly(2024, 11, 20),
                            AppointmentTime = new TimeOnly(14, 15, 0),
                            DoctorId = 6,
                            PatientId = 2,
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDay = new DateOnly(2024, 11, 14),
                            AppointmentTime = new TimeOnly(8, 45, 0),
                            DoctorId = 1,
                            PatientId = 3,
                            Status = "completed"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDay = new DateOnly(2024, 11, 22),
                            AppointmentTime = new TimeOnly(11, 0, 0),
                            DoctorId = 8,
                            PatientId = 4,
                            Status = "canceled"
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDay = new DateOnly(2024, 11, 25),
                            AppointmentTime = new TimeOnly(15, 0, 0),
                            DoctorId = 9,
                            PatientId = 5,
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDay = new DateOnly(2024, 11, 30),
                            AppointmentTime = new TimeOnly(12, 30, 0),
                            DoctorId = 5,
                            PatientId = 6,
                            Status = "rescheduled"
                        },
                        new
                        {
                            Id = 7,
                            AppointmentDay = new DateOnly(2024, 11, 27),
                            AppointmentTime = new TimeOnly(7, 45, 0),
                            DoctorId = 3,
                            PatientId = 7,
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 8,
                            AppointmentDay = new DateOnly(2024, 11, 10),
                            AppointmentTime = new TimeOnly(13, 45, 0),
                            DoctorId = 7,
                            PatientId = 8,
                            Status = "completed"
                        },
                        new
                        {
                            Id = 9,
                            AppointmentDay = new DateOnly(2024, 11, 23),
                            AppointmentTime = new TimeOnly(10, 30, 0),
                            DoctorId = 4,
                            PatientId = 9,
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 10,
                            AppointmentDay = new DateOnly(2024, 11, 17),
                            AppointmentTime = new TimeOnly(6, 15, 0),
                            DoctorId = 5,
                            PatientId = 10,
                            Status = "scheduled"
                        });
                });

            modelBuilder.Entity("Assessment_Riwi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("departure_time");

                    b.Property<TimeOnly>("EntryTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("entry_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartureTime = new TimeOnly(16, 0, 0),
                            EntryTime = new TimeOnly(8, 0, 0),
                            Name = "john smith",
                            Password = "$2a$11$gtp5M/xBM4qU0MPMMxZ2v.IIncP4iQib0fAa/0.XyqmxWBPUDKZuW",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 2,
                            DepartureTime = new TimeOnly(17, 0, 0),
                            EntryTime = new TimeOnly(9, 0, 0),
                            Name = "emily davis",
                            Password = "$2a$11$D.r8CRY591IHzt9.cPO7Oefi4Xn9nLXyWdXvbZqgHTGbSFwRjWpcO",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 3,
                            DepartureTime = new TimeOnly(15, 30, 0),
                            EntryTime = new TimeOnly(7, 30, 0),
                            Name = "michael johnson",
                            Password = "$2a$11$D128DCuQSv9Ou2j0F8TfKOMgUctIyLGXBQo9x/GPtWYtNwgtY3yii",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 4,
                            DepartureTime = new TimeOnly(18, 0, 0),
                            EntryTime = new TimeOnly(10, 0, 0),
                            Name = "sophia brown",
                            Password = "$2a$11$1w1kOm5xxWf16rMtbYLTzOcWNnLf5rC2vlhakl/RdLt7ZAd2NLLNW",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 5,
                            DepartureTime = new TimeOnly(14, 0, 0),
                            EntryTime = new TimeOnly(6, 0, 0),
                            Name = "james williams",
                            Password = "$2a$11$2PYe7J49UAINbu7yQUqinuNAAIU4.eH1T1gcvFfr22hnsDnS1e8TK",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 6,
                            DepartureTime = new TimeOnly(21, 0, 0),
                            EntryTime = new TimeOnly(13, 0, 0),
                            Name = "olivia martinez",
                            Password = "$2a$11$gLYSCejTumnuhfu00FWOL.OifF7FcW96yh9DmWnZyOkK/zBkkjsr6",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 7,
                            DepartureTime = new TimeOnly(20, 0, 0),
                            EntryTime = new TimeOnly(12, 0, 0),
                            Name = "benjamin wilson",
                            Password = "$2a$11$sNsoP3xPn89Z6iENcTR1keA4EWeVhJEbNM775OTa77oHylWFlphqO",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 8,
                            DepartureTime = new TimeOnly(19, 0, 0),
                            EntryTime = new TimeOnly(11, 0, 0),
                            Name = "isabella miller",
                            Password = "$2a$11$uWbJgjZY1Z9JXG4rQQjsFedy.Wnj.0GVI/UBuIKqacIDqwbdkcDqi",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 9,
                            DepartureTime = new TimeOnly(22, 0, 0),
                            EntryTime = new TimeOnly(14, 0, 0),
                            Name = "elijah garcia",
                            Password = "$2a$11$/Nkk3M7QTh7h2f/p14dc1uspiIV3fNVRYqz8Lm11eg4Y6hIEbcKPa",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 10,
                            DepartureTime = new TimeOnly(13, 30, 0),
                            EntryTime = new TimeOnly(5, 30, 0),
                            Name = "amelia clark",
                            Password = "$2a$11$7BVZp9aqHNDyCuCVdK.TFe9gXqQJe19Y.R6S3iR8iFIMDWJKnbNYu",
                            Role = "doctor"
                        });
                });

            modelBuilder.Entity("Assessment_Riwi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "alice.green@example.com",
                            Name = "alice green",
                            Password = "$2a$11$qI80t3i0tqFB50BWusapX.ABz788mLYyFO94bXilc6qCavfbuxfKy",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 2,
                            Address = "bob.brown@example.com",
                            Name = "bob brown",
                            Password = "$2a$11$JIlfei2Tail/mr0X67hfge77dfAA/nP3kDiY5xzhJwq9BFAuT26B2",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 3,
                            Address = "charlie.white@example.com",
                            Name = "charlie white",
                            Password = "$2a$11$mdzciIud8Gxxy4LRlIcCNOPkqhvQt2w3FpqMVeHkMsBYIck3Lg6sC",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 4,
                            Address = "diana.black@example.com",
                            Name = "diana black",
                            Password = "$2a$11$am.l4A13KgZnicTM.L6lXOZyXWfTg.L012wPv/UW4pVn/5A.z7lgC",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 5,
                            Address = "edward.harris@example.com",
                            Name = "edward harris",
                            Password = "$2a$11$IB3/qmsz4JqYVLhuZ/MFe.U52S/nbzQnfcgg5RL44MrPWxlQ8X4D6",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 6,
                            Address = "fiona.scott@example.com",
                            Name = "fiona scott",
                            Password = "$2a$11$sIBPAWCdtfBh6uomIUP8MuQ7aPMqjfEcWMvcx9dvX35KvKVKN5FYC",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 7,
                            Address = "george.clark@example.com",
                            Name = "george clark",
                            Password = "$2a$11$ELAdM.oZy84EkIQ2mc.w0u1c2WAGpC2.pxygq7P.uRyf0jtmxyNwu",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 8,
                            Address = "hannah.king@example.com",
                            Name = "hannah king",
                            Password = "$2a$11$N8zgSBvFCJ3HJnYUvVpDfePqxo4cey24yCXpSc0ZlrNsEj0.rgILK",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 9,
                            Address = "ian.wilson@example.com",
                            Name = "ian wilson",
                            Password = "$2a$11$vvXQahB/ZARnXfTV6yhtHO59HWk5.8wZvPCon0DHEAzsHHeiDnz1q",
                            Role = "Patient"
                        },
                        new
                        {
                            Id = 10,
                            Address = "julia.turner@example.com",
                            Name = "julia turner",
                            Password = "$2a$11$yqVrn52GxcOdJ5P/2UDJkO68IYqZcif6x/7sC9QamIWJSMHsOK7Ee",
                            Role = "Patient"
                        });
                });

            modelBuilder.Entity("Assessment_Riwi.Models.Appointment", b =>
                {
                    b.HasOne("Assessment_Riwi.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assessment_Riwi.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
